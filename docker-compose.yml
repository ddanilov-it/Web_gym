version: "3.8"

services:
  auth-service:
    build: ./auth_service
    container_name: auth_service
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - auth-db
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_USER=postgres
      - DB_HOST=auth-db # Используем имя сервиса для первой базы данных
      - DB_NAME=auth_db
      - DB_PASS=secret
    volumes:
      - ./auth_service:/app
      - /app/node_modules
      - keys_volume:/app/keys
    networks:
      - backend

  sub-service:
    build: ./sub-service
    container_name: sub_service
    restart: always
    ports:
      - "5001:5001"
    depends_on:
      - sub-db
    environment:
      - NODE_ENV=production
      - PORT=5001
      - DB_USER=postgres
      - DB_HOST=sub-db # Используем имя сервиса для второй базы данных
      - DB_NAME=sub_db
      - DB_PASS=secret
    volumes:
      - ./sub-service:/app
      - /app/node_modules
      - auth_service_keys_volume:/app/keys
    networks:
      - backend

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3001:3001"
    networks:
      - backend
    depends_on:
      - auth-service
      - sub-service

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - backend

  auth-db:
    image: postgres:15
    container_name: postgres_auth_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: auth_db
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend

  sub-db:
    image: postgres:15
    container_name: postgres_sub_db
    restart: always
    ports:
      - "5433:5432" # Порт изменен для второй базы данных
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: sub_db
    volumes:
      - pg_data2:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  pg_data:
  pg_data2:
  keys_volume:
  auth_service_keys_volume:
    external: true # Указываем, что этот том создан в другом компоузе

networks:
  backend:
    driver: bridge
