import axios from 'axios';
import { Client, Subscription } from '../types/types';

const BASE_URL = 'http://localhost/api/sub';

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä Axios
const api = axios.create({
  baseURL: BASE_URL,
  timeout: 10000,
  headers: {
    'Content-Type': 'application/json',
  },
});

// üìå –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// üìå –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤ localStorage
export const setAuthToken = (token: string | null) => {
  if (token) {
    localStorage.setItem('token', token);
  } else {
    localStorage.removeItem('token');
  }
};

// üìå API-–∑–∞–ø—Ä–æ—Å—ã
export const fetchClients = async (): Promise<Client[]> => {
  const response = await api.get('/clients');
  return response.data;
};

export const fetchSubscriptions = async (): Promise<Subscription[]> => {
  const response = await api.get('/subscriptions');
  return response.data;
};

export const addClient = async (client: Omit<Client, 'id'>): Promise<Client> => {
  try {
    console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", client);
    const response = await api.post('/clients', client);
    console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response);
    return response.data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:", error);
    throw error;
  }
};


export const addSubscription = async (subscription: Omit<Subscription, 'id'>): Promise<Subscription> => {
  const response = await api.post('/subscriptions', subscription);
  return response.data;
};

export const deleteClient = async (clientId: number) => {
  await api.delete(`/clients/${clientId}`);
};

export const deleteSubscription = async (subscriptionId: number) => {
  await api.delete(`/subscriptions/${subscriptionId}`);
};

export default api;
